{"sha":"eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","commit":{"author":{"name":"Malintha Amarasinghe","email":"malintha.prasan@gmail.com","date":"2016-08-16T06:31:34Z"},"committer":{"name":"Malintha Amarasinghe","email":"malintha.prasan@gmail.com","date":"2016-08-16T06:31:34Z"},"message":"support SSO without SLO for store and publisher","tree":{"sha":"6c8d8c8f728a325166ffe6f8370080f03461e577","url":"https://api.github.com/repos/wso2/carbon-apimgt/git/trees/6c8d8c8f728a325166ffe6f8370080f03461e577"},"url":"https://api.github.com/repos/wso2/carbon-apimgt/git/commits/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","comment_count":0},"url":"https://api.github.com/repos/wso2/carbon-apimgt/commits/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","html_url":"https://github.com/wso2/carbon-apimgt/commit/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","comments_url":"https://api.github.com/repos/wso2/carbon-apimgt/commits/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/comments","author":{"login":"malinthaprasan","id":1591316,"avatar_url":"https://avatars.githubusercontent.com/u/1591316?v=3","gravatar_id":"","url":"https://api.github.com/users/malinthaprasan","html_url":"https://github.com/malinthaprasan","followers_url":"https://api.github.com/users/malinthaprasan/followers","following_url":"https://api.github.com/users/malinthaprasan/following{/other_user}","gists_url":"https://api.github.com/users/malinthaprasan/gists{/gist_id}","starred_url":"https://api.github.com/users/malinthaprasan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malinthaprasan/subscriptions","organizations_url":"https://api.github.com/users/malinthaprasan/orgs","repos_url":"https://api.github.com/users/malinthaprasan/repos","events_url":"https://api.github.com/users/malinthaprasan/events{/privacy}","received_events_url":"https://api.github.com/users/malinthaprasan/received_events","type":"User","site_admin":false},"committer":{"login":"malinthaprasan","id":1591316,"avatar_url":"https://avatars.githubusercontent.com/u/1591316?v=3","gravatar_id":"","url":"https://api.github.com/users/malinthaprasan","html_url":"https://github.com/malinthaprasan","followers_url":"https://api.github.com/users/malinthaprasan/followers","following_url":"https://api.github.com/users/malinthaprasan/following{/other_user}","gists_url":"https://api.github.com/users/malinthaprasan/gists{/gist_id}","starred_url":"https://api.github.com/users/malinthaprasan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malinthaprasan/subscriptions","organizations_url":"https://api.github.com/users/malinthaprasan/orgs","repos_url":"https://api.github.com/users/malinthaprasan/repos","events_url":"https://api.github.com/users/malinthaprasan/events{/privacy}","received_events_url":"https://api.github.com/users/malinthaprasan/received_events","type":"User","site_admin":false},"parents":[{"sha":"e12ef6e408d3f0e5454c37361b8b03c725f32e1e","url":"https://api.github.com/repos/wso2/carbon-apimgt/commits/e12ef6e408d3f0e5454c37361b8b03c725f32e1e","html_url":"https://github.com/wso2/carbon-apimgt/commit/e12ef6e408d3f0e5454c37361b8b03c725f32e1e"}],"stats":{"total":94,"additions":71,"deletions":23},"files":[{"sha":"301415b73cef829193d2dfcbe087cb97fc8dead0","filename":"components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/SAMLSSORelyingPartyObject.java","status":"modified","additions":54,"deletions":23,"changes":77,"blob_url":"https://github.com/wso2/carbon-apimgt/blob/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/SAMLSSORelyingPartyObject.java","raw_url":"https://github.com/wso2/carbon-apimgt/raw/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/SAMLSSORelyingPartyObject.java","contents_url":"https://api.github.com/repos/wso2/carbon-apimgt/contents/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/SAMLSSORelyingPartyObject.java?ref=eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","patch":"@@ -819,9 +819,11 @@ public static void jsFunction_invalidateSessionBySessionId(Context cx, Scriptabl\n         SAMLSSORelyingPartyObject relyingPartyObject = (SAMLSSORelyingPartyObject) thisObj;\n         String sessionId = (String) args[0];\n         String sessionIndex = relyingPartyObject.getSessionIndex(sessionId);\n-        relyingPartyObject.handleLogout(sessionIndex);\n-\n-\n+        if (sessionIndex != null) {\n+            relyingPartyObject.handleLogout(sessionIndex);\n+        } else {\n+            relyingPartyObject.handleLogoutBySessionId(sessionId);\n+        }\n     }\n \n     /**\n@@ -901,12 +903,14 @@ public static void jsFunction_setSessionAuthenticated(Context cx, Scriptable thi\n             log.debug(\"Encoded SAML token that is set on session info is \" + args[1]);\n         }\n         sessionInfo.setSamlToken((String) args[1]);//We expect an encoded SamlToken here.\n+        SessionHostObject sho = (SessionHostObject) args[2];\n+        sessionInfo.setSessionHostObject(sho);\n         relyingPartyObject.addSessionInfo(sessionInfo);\n         //relyingPartyObject.addSessionInfo(sessionIndex, SAMLSSORelyingPartyObject.sho);\n \n-        SessionHostObject sho = (SessionHostObject) args[2];\n-        relyingPartyObject.addSessionInfo(sessionIndex, sho);\n-\n+        if (sessionIndex != null) {\n+            relyingPartyObject.addSessionToSessionIndexMap(sessionIndex, sho);\n+        }\n     }\n \n     /**\n@@ -1078,21 +1082,26 @@ private void invalidateSessionBySessionId(String sessionId) {\n     }\n \n     private boolean isSessionIdExists(String sessionId) throws Exception {\n-        Iterator<Map.Entry<String, Set<SessionHostObject>>> iterator = sessionIndexMap.entrySet().iterator();\n-        while (iterator.hasNext()) {\n-            Map.Entry<String, Set<SessionHostObject>> entry = iterator.next();\n+        for (Map.Entry<String, Set<SessionHostObject>> entry : sessionIndexMap.entrySet()) {\n             Set<SessionHostObject> sessions = new HashSet<SessionHostObject>(entry.getValue());\n             for (SessionHostObject session : sessions) {\n                 Object[] args = new Object[0];\n-                if (session != null && sessionId.equals(SessionHostObject.jsFunction_getId(null, session, args, null))) {\n+                if (session != null && sessionId\n+                        .equals(SessionHostObject.jsFunction_getId(null, session, args, null))) {\n                     if (log.isDebugEnabled()) {\n                         log.debug(\"Session Id exists:\" + SessionHostObject.jsFunction_getId(null, session, args, null));\n                     }\n                     return true;\n                 }\n             }\n-            //}\n         }\n+        log.debug(\"Session Id does not exist in sessionIndexMap. Now searching in sessionIdMap.\");\n+        if (getSessionInfo(sessionId) != null) {\n+            log.debug(\"Session Id exists in sessionIdMap : \" + sessionId);\n+            return true;\n+        }\n+\n+        log.debug(\"Session Id does not exist in sessionIdMap : \" + sessionId);\n         return false;\n     }\n \n@@ -1140,17 +1149,7 @@ private static String getSSOSamlDeflateProperty(SAMLSSORelyingPartyObject relyin\n         }\n     }\n \n-    /**\n-     * Add current browser session with session index.\n-     */\n-    private void addSessionInfo(String sessionIndex, Set<SessionHostObject> sho) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Added session index:\" + sessionIndex);\n-        }\n-        sessionIndexMap.put(sessionIndex, sho);\n-    }\n-\n-    private void addSessionInfo(String sessionIndex, SessionHostObject sho) {\n+    private void addSessionToSessionIndexMap(String sessionIndex, SessionHostObject sho) {\n         if (log.isDebugEnabled()) {\n             log.debug(\"Added session index:\" + sessionIndex);\n         }\n@@ -1162,7 +1161,6 @@ private void addSessionInfo(String sessionIndex, SessionHostObject sho) {\n             sessionSet.add(sho);\n             sessionIndexMap.put(sessionIndex, sessionSet);\n         }\n-\n     }\n \n     /**\n@@ -1276,6 +1274,14 @@ public void handleLogout(String sessionIndex) {\n         }\n     }\n \n+    public void handleLogoutBySessionId(String sessionId) {\n+        clearSessionDataFromSessionId(sessionId);\n+\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Cleared authenticated session id:\" + sessionId + \"in handle logout method\");\n+        }\n+    }\n+\n     public void handleClusterLogout(String sessionIndex) {\n         if (log.isDebugEnabled()) {\n             log.debug(\"session index map value:\" + sessionIndexMap);\n@@ -1331,6 +1337,31 @@ private void clearSessionData(String sessionIndex) {\n         }\n     }\n \n+    private void clearSessionDataFromSessionId(String sessionIdToClear) {\n+        SessionInfo sessionInfo = getSessionInfo(sessionIdToClear);\n+        if (sessionInfo != null) {\n+            SessionHostObject sessionHostObject = sessionInfo.getSessionHostObject();\n+            if (sessionHostObject != null) {\n+                try {\n+                    Object[] args = new Object[0];\n+                    SessionHostObject.jsFunction_invalidate(null, sessionHostObject, args, null);\n+                } catch (Exception ex) {\n+                    //catches generic exception since we do not need to stop the\n+                    // process due to invalidating one single session\n+                    if (ex.getMessage().contains(\"Session already invalidated\")) { // can be ignored\n+                        log.info(ex.getMessage());\n+                    } else {\n+                        //log the error and continues since this does not brake the flow.\n+                        log.error(\"Error while invalidating the session \" + sessionIdToClear, ex);\n+                    }\n+                }\n+            }\n+        }\n+        ssho.invalidateSessionBySessionId(sessionIdToClear);\n+        if (log.isDebugEnabled()) {\n+            log.debug(\"Cleared authenticated session index:\" + sessionIdToClear + \"in handle logout method\");\n+        }\n+    }\n \n     public void sendSessionInvalidationClusterMessage(String sessionIndex) {\n "},{"sha":"2d30777344d759672b89a8fb9592068d8badc5ba","filename":"components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/internal/SessionInfo.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/wso2/carbon-apimgt/blob/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/internal/SessionInfo.java","raw_url":"https://github.com/wso2/carbon-apimgt/raw/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/internal/SessionInfo.java","contents_url":"https://api.github.com/repos/wso2/carbon-apimgt/contents/components/sso-hostobject/org.wso2.carbon.hostobjects.sso/src/main/java/org/wso2/carbon/hostobjects/sso/internal/SessionInfo.java?ref=eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","patch":"@@ -16,11 +16,14 @@\n \n package org.wso2.carbon.hostobjects.sso.internal;\n \n+import org.jaggeryjs.hostobjects.web.SessionHostObject;\n+\n public class SessionInfo {\n     private String sessionId;\n     private String loggedInUser;\n     private String sessionIndex;\n     private String samlToken;\n+    private SessionHostObject sessionHostObject;\n \n     public SessionInfo(String sessionId) {\n         this.sessionId = sessionId;\n@@ -57,4 +60,12 @@ public String getSamlToken() {\n     public void setSamlToken(String samlToken) {\n         this.samlToken = samlToken;\n     }\n+\n+    public void setSessionHostObject(SessionHostObject sessionHostObject) {\n+        this.sessionHostObject = sessionHostObject;\n+    }\n+\n+    public SessionHostObject getSessionHostObject() {\n+        return sessionHostObject;\n+    }\n }\n\\ No newline at end of file"},{"sha":"300fe66bbc1db2964d4a175414bb802d5fd72f56","filename":"features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/site/themes/wso2/templates/sso/logout/template.jag","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/wso2/carbon-apimgt/blob/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/site/themes/wso2/templates/sso/logout/template.jag","raw_url":"https://github.com/wso2/carbon-apimgt/raw/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/site/themes/wso2/templates/sso/logout/template.jag","contents_url":"https://api.github.com/repos/wso2/carbon-apimgt/contents/features/apimgt/org.wso2.carbon.apimgt.publisher.feature/src/main/resources/publisher/site/themes/wso2/templates/sso/logout/template.jag?ref=eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","patch":"@@ -45,6 +45,9 @@\n                             log.debug(\"doing logout request\");\n                         }\n                         idpURL = ssoRelyingParty.getProperty(\"identityProviderURL\");\n+                        if (!Boolean(idpURL)) {\n+                            idpURL = site.ssoConfiguration.identityProviderURL ;\n+                        }\n                 }\n \n                 var encodedRequest = ssoRelyingParty.encode(samlLogoutRequest);"},{"sha":"d74ed511539954888f8e5bdd998f356389b02217","filename":"features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/store/site/themes/wso2/templates/sso/logout/template.jag","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/wso2/carbon-apimgt/blob/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/store/site/themes/wso2/templates/sso/logout/template.jag","raw_url":"https://github.com/wso2/carbon-apimgt/raw/eaa45529cbabc5f30a2ffaa4781821ad0a5223ab/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/store/site/themes/wso2/templates/sso/logout/template.jag","contents_url":"https://api.github.com/repos/wso2/carbon-apimgt/contents/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/store/site/themes/wso2/templates/sso/logout/template.jag?ref=eaa45529cbabc5f30a2ffaa4781821ad0a5223ab","patch":"@@ -44,6 +44,9 @@\n                             log.debug(\"doing logout request\");\n                         }\n                         idpURL = ssoRelyingParty.getProperty(\"identityProviderURL\");\n+                        if (!Boolean(idpURL)) {\n+                            idpURL = site.ssoConfiguration.identityProviderURL ;\n+                        }\n                 }\n \n                 var encodedRequest = ssoRelyingParty.encode(samlLogoutRequest);"}]}